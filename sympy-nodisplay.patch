--- sympy-1.11.1/sympy/testing/runtests.py.orig	2022-08-27 22:12:08.667409400 +0200
+++ sympy-1.11.1/sympy/testing/runtests.py	2023-01-12 21:28:47.662698943 +0100
@@ -526,9 +526,11 @@ def _test(*paths,
         # Travis times out if no activity is seen for 10 minutes.
         timeout = 595
         fail_on_timeout = True
-    if ON_TRAVIS:
+    if ON_TRAVIS or os.getenv('DISPLAY', '') == '':
         # pyglet does not work on Travis
-        blacklist = list(blacklist) + ['sympy/plotting/pygletplot/tests']
+        blacklist = list(blacklist) + ['sympy/plotting/pygletplot/tests',
+                                       'sympy/categories/tests/test_drawing.py',
+                                       'sympy/printing/tests/test_preview.py']
     blacklist = convert_to_native_paths(blacklist)
     r = PyTestReporter(verbose=verbose, tb=tb, colors=colors,
         force_colors=force_colors, split=split)
@@ -698,8 +700,10 @@ def _get_doctest_blacklist():
             import matplotlib
             matplotlib.use('Agg')
 
-    if ON_TRAVIS or import_module('pyglet') is None:
-        blacklist.extend(["sympy/plotting/pygletplot"])
+    if ON_TRAVIS or os.getenv('DISPLAY', '') == '' or import_module('pyglet') is None:
+        blacklist.extend(["sympy/plotting/pygletplot",
+                          "sympy/categories/diagram_drawing.py",
+                          "sympy/printing/preview.py"])
 
     if import_module('aesara') is None:
         blacklist.extend([
--- sympy-1.11.1/sympy/core/tests/test_args.py.orig	2022-08-27 22:12:08.471407700 +0200
+++ sympy-1.11.1/sympy/core/tests/test_args.py	2023-01-13 16:17:38.579102416 +0100
@@ -26,6 +26,18 @@ a, b, c, x, y, z = symbols('a,b,c,x,y,z'
 whitelist = [
      "sympy.assumptions.predicates",    # tested by test_predicates()
      "sympy.assumptions.relation.equality",    # tested by test_predicates()
+     "sympy.plotting.pygletplot.managed_window",  # requires DISPLAY to import
+     "sympy.plotting.pygletplot.plot",
+     "sympy.plotting.pygletplot.plot_axes",
+     "sympy.plotting.pygletplot.plot_camera",
+     "sympy.plotting.pygletplot.plot_controller",
+     "sympy.plotting.pygletplot.plot_curve",
+     "sympy.plotting.pygletplot.plot_mode_base",
+     "sympy.plotting.pygletplot.plot_modes",
+     "sympy.plotting.pygletplot.plot_rotation",
+     "sympy.plotting.pygletplot.plot_surface",
+     "sympy.plotting.pygletplot.plot_window",
+     "sympy.plotting.pygletplot.util",
 ]
 
 def test_all_classes_are_tested():
